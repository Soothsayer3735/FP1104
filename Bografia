Ada Lovelace
Augusta Ada Byron, que era el nombre real de Ada Lovelace (tras casarse pasó a llamarse Augusta Ada King, Condesa de Lovelace y de ahí procede "Ada Lovelace"), nació en la ciudad de Londres el 10 de diciembre de 1815. 
Su padre era, nada más y nada menos, que el poeta inglés Lord Byron y su esposa la baronesa Anne Isabella Byron (de hecho, fue su único vástago legítimo y dentro del matrimonio), sin embargo, el padre de Ada se separó de su esposa al mes del nacimiento de su hija y, cuatro meses más tarde, abandonaría Inglaterra, a la que nunca más regresó.
La madre de Ada promovió en su hija el interés por las matemáticas y la lógica para evitar, de esta forma, fomentar el carácter de Lord Byron en Ada. A pesar de esta inmersión en las ciencias, Ada Lovelace no se alejó ni de su padre ni de su legado,
a pesar de que éste muriese cuando ella ni había cumplido los 9 años de edad. Su madre siempre pensó que las ciencias la apartarían de la "locura" e su padre y Ada recibió clases de tutores como William Frend y Mary Sommerville en matemáticas y Augustus De Morgan en lógica; unos tutores que vieron claro la predisposición de su alumna al aprendizaje de estas materias y su talento para las matemáticas.
Además de crecer sin su padre, la infancia de Ada Lovelace no fue sencilla. Sufrió un grave brote de sarampión, a la edad de 14 años, que la mantuvo en cama casi un año y luego estuvo otro año más dependiendo de unas muletas para caminar.
A pesar de este impedimento, Ada se centró aún más en su educación científica y Mary Sommerville, una de sus tutoras, le presentó a una figura que sería clave en su vida: Charles Babbage.
ALGORITMOS
En programación, los algoritmos se implementan en forma de sentencias en algún lenguaje de programación. De esta manera, la forma de escribir los algoritmos depende del lenguaje de programación, y del paradigma usado. Estos son los algoritmos que pueden ser interpretados por una computadora y así ser ejecutados.
Los algoritmos también pueden representarse gráficamente empleando diagramas de flujo o formas similares. De esta manera, son fácilmente comprensibles, especialmente para personas que no son programadores. También, de esta manera, los algoritmos son más "universales", pues no dependen de un lenguaje de programación específico.
Los algoritmos también pueden escribirse en pseudocódigo, lo que también los hace fáciles de entender.
Se hacen intentos para que las computadoras interpreten y ejecuten los diagramas de flujo y los pseudocódigos, pero no logran la flexibilidad, potencia y velocidad de los algoritmos puramente escritos en un lenguaje de programación específico.
Un algoritmo también puede expresarse en lenguaje natural, aunque esto puede traer ambigüedades e interpretaciones erróneas (la ambigüedad es propia del lenguaje humano).
